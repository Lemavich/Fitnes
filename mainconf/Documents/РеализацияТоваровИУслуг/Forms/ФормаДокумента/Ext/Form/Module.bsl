&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	СсылкаНаДокументОснование = Документы.ПредварительнаяЗапись.ПроверитьОказаниеУслуг(Параметры.Основание);
	Если Параметры.Свойство("Основание")
	    И ЗначениеЗаполнено(Параметры.Основание)
	    И ТипЗнч(Параметры.Основание) = Тип("ДокументСсылка.ПредварительнаяЗапись")  //1
	    И СсылкаНаДокументОснование <> Ложь Тогда
    	СообщениеПользователю = Новый СообщениеПользователю(); //2
        СообщениеПользователю.Текст = СтрШаблон("Для документа уже введён документ реализации %1!",СсылкаНаДокументОснование);
        СообщениеПользователю.Сообщить();
        Отказ = Истина;
        возврат;
	КонецЕсли;
	
	

	Если Объект.Ссылка.Пустая() Тогда
		Объект.ПризнакОплаты = Перечисления.ОплатаДокумента.НеОплачен; 
	Иначе
		СтруктураОплаты = Документы.РеализацияТоваровИУслуг.ПроверитьОплатуДокумента(Объект.Ссылка);
		Объект.ПризнакОплаты = СтруктураОплаты.ПризнакОплаты;
	КонецЕсли;
		
		
КонецПроцедуры


Процедура ПересчитатьСуммуДокумента()
   	Объект.СуммаДокумента = Объект.Товары.Итог("Сумма") + Объект.Услуги.Итог("Сумма") + Объект.Абонементы.Итог("Сумма");
КонецПроцедуры

&НаКлиенте
Процедура ТоварыНоменклатураПриИзменении(Элемент)
	СтрокаТЧ = Элементы.Товары.ТекущиеДанные;  
	Если ЗначениеЗаполнено(СтрокаТЧ.Номенклатура) Тогда
		СтрокаТЧ.Цена = РаботаСЦенами.ПолучитьЦенуПродажиНаДату(СтрокаТЧ.Номенклатура,СтрокаТЧ.ВидЦены);
	Иначе
		СтрокаТЧ.Цена = 0;		
	КонецЕсли;
	РаботаСТабличнымиЧастями.ПересчитатьСуммуВСтрокеТабличнойЧасти(СтрокаТЧ);
    ПересчитатьСуммуДокумента();
	
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыВидЦеныПриИзменении(Элемент)
	СтрокаТЧ = Элементы.Товары.ТекущиеДанные;  
	Если ЗначениеЗаполнено(СтрокаТЧ.Номенклатура) Тогда
		СтрокаТЧ.Цена = РаботаСЦенами.ПолучитьЦенуПродажиНаДату(СтрокаТЧ.Номенклатура,СтрокаТЧ.ВидЦены);
	Иначе
		СтрокаТЧ.Цена = 0;		
	КонецЕсли;  
	РаботаСТабличнымиЧастями.ПересчитатьСуммуВСтрокеТабличнойЧасти(СтрокаТЧ);
    ПересчитатьСуммуДокумента();
КонецПроцедуры

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	СтрокаТЧ = Элементы.Товары.ТекущиеДанные;  
	РаботаСТабличнымиЧастями.ПересчитатьСуммуВСтрокеТабличнойЧасти(СтрокаТЧ);  
    ПересчитатьСуммуДокумента();

КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаПриИзменении(Элемент)
	СтрокаТЧ = Элементы.Товары.ТекущиеДанные;  
	РаботаСТабличнымиЧастями.ПересчитатьСуммуВСтрокеТабличнойЧасти(СтрокаТЧ);  
    ПересчитатьСуммуДокумента();

КонецПроцедуры

&НаКлиенте
Процедура ТоварыПослеУдаления(Элемент)
    ПересчитатьСуммуДокумента();
КонецПроцедуры


&НаКлиенте
Процедура УслугиУслугаПриИзменении(Элемент)
	СтрокаТЧ = Элементы.Услуги.ТекущиеДанные;  
	Если ЗначениеЗаполнено(СтрокаТЧ.Услуга) Тогда
		СтрокаТЧ.Цена = РаботаСЦенами.ПолучитьЦенуПродажиНаДату(СтрокаТЧ.Услуга,СтрокаТЧ.ВидЦены);
	Иначе
		СтрокаТЧ.Цена = 0;		
	КонецЕсли;
	РаботаСТабличнымиЧастями.ПересчитатьСуммуВСтрокеТабличнойЧасти(СтрокаТЧ);
    ПересчитатьСуммуДокумента();
КонецПроцедуры

&НаКлиенте
Процедура УслугиВидЦеныПриИзменении(Элемент)
	СтрокаТЧ = Элементы.Услуги.ТекущиеДанные;  
	Если ЗначениеЗаполнено(СтрокаТЧ.Услуга) Тогда
		СтрокаТЧ.Цена = РаботаСЦенами.ПолучитьЦенуПродажиНаДату(СтрокаТЧ.Услуга,СтрокаТЧ.ВидЦены);
	Иначе
		СтрокаТЧ.Цена = 0;		
	КонецЕсли;  
	РаботаСТабличнымиЧастями.ПересчитатьСуммуВСтрокеТабличнойЧасти(СтрокаТЧ);
    ПересчитатьСуммуДокумента();
КонецПроцедуры

&НаКлиенте
Процедура УслугиЦенаПриИзменении(Элемент)
	СтрокаТЧ = Элементы.Услуги.ТекущиеДанные;  
	РаботаСТабличнымиЧастями.ПересчитатьСуммуВСтрокеТабличнойЧасти(СтрокаТЧ);  
    ПересчитатьСуммуДокумента();

КонецПроцедуры

&НаКлиенте    
Процедура УслугиКоличетсвоПриИзменении(Элемент)
	СтрокаТЧ = Элементы.Услуги.ТекущиеДанные;  
	РаботаСТабличнымиЧастями.ПересчитатьСуммуВСтрокеТабличнойЧасти(СтрокаТЧ);  
    ПересчитатьСуммуДокумента();
КонецПроцедуры

&НаКлиенте
Процедура УслугиПослеУдаления(Элемент)
    ПересчитатьСуммуДокумента();
КонецПроцедуры

&НаКлиенте
Процедура АбонементыНоменклатураПриИзменении(Элемент)
	СтрокаТЧ = Элементы.Абонементы.ТекущиеДанные;
	Если ЗначениеЗаполнено(СтрокаТЧ.Номенклатура) Тогда
		СтрокаТЧ.Сумма = РаботаСЦенами.ПолучитьЦенуПродажиНаДату(СтрокаТЧ.Номенклатура, СтрокаТЧ.ВидЦены);
		СтрокаТЧ.Количество = ОбщиеФункции.ПолучитьСрокДействияАбонемента(СтрокаТЧ.Номенклатура);
		
	Иначе
		СтрокаТЧ.Сумма = 0;		
	КонецЕсли;
    ПересчитатьСуммуДокумента();
КонецПроцедуры

&НаСервере
Процедура СоздатьАбонементыНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	РеализацияТоваровИУслугАбонементы.Ссылка КАК Ссылка,
	               |	РеализацияТоваровИУслугАбонементы.Номенклатура КАК Номенклатура,
	               |	РеализацияТоваровИУслугАбонементы.Абонемент КАК Абонемент,
	               |	РеализацияТоваровИУслугАбонементы.Активировать КАК Активировать,
	               |	РеализацияТоваровИУслугАбонементы.Ссылка.Контрагент КАК Контрагент,
	               |	РеализацияТоваровИУслугАбонементы.Ссылка.Сотрудник КАК Сотрудник,
	               |	РеализацияТоваровИУслугАбонементы.Ссылка.Дата КАК Дата
	               |ИЗ
	               |	Документ.РеализацияТоваровИУслуг.Абонементы КАК РеализацияТоваровИУслугАбонементы
	               |ГДЕ
	               |	РеализацияТоваровИУслугАбонементы.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка",Объект.Ссылка);
	ВыборкаАбонементовИзРеализации = Запрос.Выполнить().Выбрать();
	Пока ВыборкаАбонементовИзРеализации.Следующий() Цикл 
		Если НЕ ЗначениеЗаполнено(ВыборкаАбонементовИзРеализации.Абонемент) Тогда
			НовыйАбонемент = Справочники.Абонементы.СоздатьЭлемент();
			НовыйАбонемент.Заполнить(ВыборкаАбонементовИзРеализации); 
			НовыйАбонемент.Записать();
        КонецЕсли;
	КонецЦикла;
	
    	Запрос2 = Новый Запрос;
		Запрос2.Текст = "ВЫБРАТЬ
	                |	Абонементы.Ссылка КАК Ссылка,
	                |	Абонементы.ДокументПродажи КАК ДокументПродажи,
	                |	Абонементы.Код КАК Код
	                |ИЗ
	                |	Справочник.Абонементы КАК Абонементы
	                |ГДЕ
	                |	Абонементы.ДокументПродажи = &ДокументПродажи
	                |
	                |УПОРЯДОЧИТЬ ПО
	                |	Код"; 
	
		Запрос2.УстановитьПараметр("ДокументПродажи",Объект.Ссылка);
		ВыборкаАбонементовИзСправочника = Запрос2.Выполнить().Выбрать();
		Для каждого СтрокаТЧ Из Объект.Абонементы Цикл
	        ВыборкаАбонементовИзСправочника.Следующий();
		  	СтрокаТЧ.Абонемент=ВыборкаАбонементовИзСправочника.Ссылка;
		КонецЦикла;
		ПересчитатьСуммуДокумента();

		
		
КонецПроцедуры


&НаКлиенте
Процедура СоздатьАбонементы(Команда)
	Массив = Новый Массив;
	Если Объект.Ссылка.Пустая() Тогда
		
		ТекстВопроса = "Для выполнения команды ""Создать абонементы"" данные будут записаны";
		Оповещение = Новый ОписаниеОповещения("ПослеОтветаНаВопросОСозданииАбонементов", ЭтаФорма,Массив); 
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена,,,"Внимание!");
	ИначеЕсли ЭтотОбъект.Модифицированность = Истина Тогда
		ТекстВопроса = "Для выполнения команды ""Создать абонементы"" данные будут записаны";
		Оповещение = Новый ОписаниеОповещения("ПослеОтветаНаВопросОСозданииАбонементов", ЭтаФорма,Массив); 
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена,,,"Внимание!");

	Иначе
		СоздатьАбонементыНаСервере();

  	КонецЕсли;
	
	

КонецПроцедуры


&НаКлиенте
Процедура ПослеОтветаНаВопросОСозданииАбонементов(Результат,Массив) Экспорт
	Если Результат = КодВозвратаДиалога.ОК Тогда
		ЭтотОбъект.Записать();
	    СоздатьАбонементыНаСервере();
	КонецЕсли;
КонецПроцедуры
 
