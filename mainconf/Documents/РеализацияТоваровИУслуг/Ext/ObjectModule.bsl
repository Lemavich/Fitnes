Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПредварительнаяЗапись") Тогда
		Комментарий = ДанныеЗаполнения.Комментарий;
		Контрагент = ДанныеЗаполнения.Клиент;
		Ответственный = ДанныеЗаполнения.Ответственный;
		Сотрудник = ДанныеЗаполнения.Сотрудник;
		ДокументОснование = ДанныеЗаполнения.Ссылка;
		СуммаДокумента = ДанныеЗаполнения.СуммаДокумента;
		Для Каждого ТекСтрокаАбонементы Из ДанныеЗаполнения.Абонементы Цикл
			НоваяСтрока = Абонементы.Добавить();
			НоваяСтрока.Номенклатура = ТекСтрокаАбонементы.Абонемент;
			НоваяСтрока.Количество = ТекСтрокаАбонементы.Количество;
			НоваяСтрока.Сумма = ТекСтрокаАбонементы.Сумма;
		КонецЦикла;
		Для Каждого ТекСтрокаУслуги Из ДанныеЗаполнения.Услуги Цикл
			НоваяСтрока = Услуги.Добавить();
			НоваяСтрока.Количество = ТекСтрокаУслуги.Количество;
			НоваяСтрока.Сумма = ТекСтрокаУслуги.Сумма;
			НоваяСтрока.Услуга = ТекСтрокаУслуги.Услуга;
			НоваяСтрока.Цена = ТекСтрокаУслуги.Цена;
		КонецЦикла;
	КонецЕсли;

КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)

 
	Движения.Продажи.Записывать = Истина;  
	Движения.ЗаказыКлиентов.Записывать = Истина; 
	Движения.ТоварыНаСкладах.Записывать = Истина;
	Движения.УчетЗатрат.Записывать = Истина;
	Движения.Хозрасчетный.Записывать = Истина;
	
	Движения.ТоварыНаСкладах.Записать();
	Движения.Продажи.Записать();
	Движения.УчетЗатрат.Записать();	
	          
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ТоварыНаСкладах");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = Товары;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура","Номенклатура");
	ЭлементБлокировки.УстановитьЗначение("Склад", Склад);
	Блокировка.Заблокировать();
		                   
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст ="ВЫБРАТЬ
	              |	РеализацияТоваровИУслугТовары.Номенклатура КАК Номенклатура,
	              |	РеализацияТоваровИУслуг.Склад КАК Склад,
	              |	СУММА(РеализацияТоваровИУслугТовары.Количество) КАК Количество,
	              |	СУММА(РеализацияТоваровИУслугТовары.Сумма) КАК Сумма
	              |ПОМЕСТИТЬ ВТ_Товары
	              |ИЗ
	              |	Документ.РеализацияТоваровИУслуг КАК РеализацияТоваровИУслуг
	              |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровИУслуг.Товары КАК РеализацияТоваровИУслугТовары
	              |		ПО РеализацияТоваровИУслуг.Ссылка = РеализацияТоваровИУслугТовары.Ссылка
	              |ГДЕ
	              |	РеализацияТоваровИУслугТовары.Ссылка = &Ссылка
	              |
	              |СГРУППИРОВАТЬ ПО
	              |	РеализацияТоваровИУслугТовары.Номенклатура,
	              |	РеализацияТоваровИУслуг.Склад
	              |
	              |ОБЪЕДИНИТЬ ВСЕ
	              |
	              |ВЫБРАТЬ
	              |	РеализацияТоваровИУслугУслуги.Услуга,
	              |	NULL,
	              |	РеализацияТоваровИУслугУслуги.Количество,
	              |	СУММА(РеализацияТоваровИУслугУслуги.Сумма)
	              |ИЗ
	              |	Документ.РеализацияТоваровИУслуг.Услуги КАК РеализацияТоваровИУслугУслуги
	              |ГДЕ
	              |	РеализацияТоваровИУслугУслуги.Ссылка = &Ссылка
	              |
	              |СГРУППИРОВАТЬ ПО
	              |	РеализацияТоваровИУслугУслуги.Услуга,
	              |	РеализацияТоваровИУслугУслуги.Количество
	              |
	              |ОБЪЕДИНИТЬ ВСЕ
	              |
	              |ВЫБРАТЬ
	              |	РеализацияТоваровИУслугАбонементы.Номенклатура,
	              |	NULL,
	              |	1,
	              |	СУММА(РеализацияТоваровИУслугАбонементы.Сумма)
	              |ИЗ
	              |	Документ.РеализацияТоваровИУслуг.Абонементы КАК РеализацияТоваровИУслугАбонементы
	              |ГДЕ
	              |	РеализацияТоваровИУслугАбонементы.Ссылка = &Ссылка
	              |
	              |СГРУППИРОВАТЬ ПО
	              |	РеализацияТоваровИУслугАбонементы.Номенклатура,
	              |	РеализацияТоваровИУслугАбонементы.Количество
	              |
	              |ИНДЕКСИРОВАТЬ ПО
	              |	Номенклатура,
	              |	Склад
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ
	              |	ВТ_Товары.Номенклатура КАК Номенклатура,
	              |	ВЫБОР
	              |		КОГДА ВТ_Товары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	              |				ИЛИ ВТ_Товары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Абонемент)
	              |			ТОГДА ЛОЖЬ
	              |		ИНАЧЕ ИСТИНА
	              |	КОНЕЦ КАК ЭтоТовар,
	              |	ВТ_Товары.Номенклатура.Представление КАК НоменклатураПредставление,
	              |	ВТ_Товары.Количество КАК КоличествоВДокументе,
	              |	ВТ_Товары.Сумма КАК СуммаВДокументе,
	              |	ВТ_Товары.Склад КАК Склад,
	              |	ТоварыНаСкладахОстатки.СрокГодности КАК СрокГодности,
	              |	ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0) КАК КоличествоОстаток,
	              |	ЕСТЬNULL(ТоварыНаСкладахОстатки.СуммаОстаток, 0) КАК СуммаОстаток,
	              |	ВТ_Товары.Номенклатура.СтатьяЗатрат КАК СтатьяЗатрат,
	              |	ВТ_Товары.Номенклатура.СчетБухгалтерскогоУчета КАК СчетБухгалтерскогоУчета
	              |ИЗ
	              |	ВТ_Товары КАК ВТ_Товары
	              |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(
	              |				&МоментВремени,
	              |				(Номенклатура, Склад) В
	              |					(ВЫБРАТЬ
	              |						ВТ_Товары.Номенклатура,
	              |						ВТ_Товары.Склад
	              |					ИЗ
	              |						ВТ_Товары КАК ВТ_Товары)) КАК ТоварыНаСкладахОстатки
	              |		ПО ВТ_Товары.Номенклатура = ТоварыНаСкладахОстатки.Номенклатура
	              |			И ВТ_Товары.Склад = ТоварыНаСкладахОстатки.Склад
	              |
	              |УПОРЯДОЧИТЬ ПО
	              |	СрокГодности
	              |ИТОГИ
	              |	МАКСИМУМ(КоличествоВДокументе),
	              |	МАКСИМУМ(СуммаВДокументе),
	              |	СУММА(КоличествоОстаток)
	              |ПО
	              |	Номенклатура";

	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(МоментВремени()));


	ВыборкаНоменклатура = 
	Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаНоменклатура.Следующий() Цикл 
		Если ВыборкаНоменклатура.ЭтоТовар Тогда 

	        СтоимостьОбщая = 0; 

	        Превышение = ВыборкаНоменклатура.КоличествоВДокументе - ВыборкаНоменклатура.КоличествоОстаток; 
	        Если Превышение > 0 И Константы.ЗапретПроведенияПриОтрицательныхОстатках.Получить() Тогда 
	            Сообщение = Новый СообщениеПользователю;
	            Сообщение.Текст = СтрШаблон("Превышение остатка по номенклатуре ""%1""  в количестве ""%2""", 
				ВыборкаНоменклатура.НоменклатураПредставление, Превышение);
	            Сообщение.Сообщить();
	            Отказ = Истина;
			ИначеЕсли Превышение > 0 И Константы.ЗапретПроведенияПриОтрицательныхОстатках.Получить()=Ложь Тогда 
				Сообщение = Новый СообщениеПользователю;
	            Сообщение.Текст = СтрШаблон("Образовались отрицательные остатки по номенклатуре ""%1""  в количестве ""%2""", 
				ВыборкаНоменклатура.НоменклатураПредставление, Превышение);
	            Сообщение.Сообщить();
	        КонецЕсли;

	        Если Отказ Тогда
	            Продолжить;
	        КонецЕсли;
			
	        ОсталосьСписать = ВыборкаНоменклатура.КоличествоВДокументе; 
			ВыборкаДетальные = ВыборкаНоменклатура.Выбрать();
			
			
			Для Счётчик = 0 По ВыборкаДетальные.Количество()-1 Цикл
				ВыборкаДетальные.Следующий();
				Если ОсталосьСписать <= 0 Тогда
					Прервать;
				КонецЕсли;
				Если Константы.ЗапретПроведенияПриОтрицательныхОстатках.Получить()=Ложь Тогда
					Если Счётчик = ВыборкаДетальные.Количество()-1 Тогда
						Списываем = Мин (ВыборкаДетальные.КоличествоОстаток, ОсталосьСписать);
			            Движение = Движения.ТоварыНаСкладах.ДобавитьРасход();
			            Движение.Период = Дата;
						ЗаполнитьЗначенияСвойств(Движение, ВыборкаДетальные, "Номенклатура, Склад, СрокГодности",);
						Движение.Количество = Списываем;
			            Если Списываем = ВыборкаДетальные.КоличествоОстаток Тогда 
			                Движение.Сумма = ВыборкаДетальные.СуммаОстаток;
			            Иначе
			                Движение.Сумма = Списываем / ВыборкаДетальные.КоличествоОстаток * ВыборкаДетальные.СуммаОстаток;
						КонецЕсли;
						Если (ОсталосьСписать-Списываем) > 0 Тогда
	                        ОсталосьСписать = ОсталосьСписать - Списываем; 
				            Движение = Движения.ТоварыНаСкладах.ДобавитьРасход(); 
				            Движение.Период = Дата;
							ЗаполнитьЗначенияСвойств(Движение, ВыборкаДетальные, "Номенклатура, Склад",);
							Движение.Количество = ОсталосьСписать;
			                Движение.Сумма = ОсталосьСписать / ВыборкаДетальные.КоличествоОстаток * ВыборкаДетальные.СуммаОстаток;
						КонецЕсли;
						
					Иначе
						Списываем = Мин (ВыборкаДетальные.КоличествоОстаток, ОсталосьСписать);
						Движение = Движения.ТоварыНаСкладах.ДобавитьРасход();
						Движение.Период = Дата;
						ЗаполнитьЗначенияСвойств(Движение, ВыборкаДетальные, "Номенклатура, Склад, СрокГодности",);
						Движение.Количество = Списываем;
						Если Списываем = ВыборкаДетальные.КоличествоОстаток Тогда
							Движение.Сумма = ВыборкаДетальные.СуммаОстаток;
						Иначе
							Движение.Сумма = Списываем / ВыборкаДетальные.КоличествоОстаток * ВыборкаДетальные.СуммаОстаток;
						КонецЕсли;	
						ОсталосьСписать = ОсталосьСписать - Списываем; 
			            СтоимостьОбщая = СтоимостьОбщая + Движение.Сумма;

						
					КонецЕсли;	
					
				Иначе

		            Списываем = Мин (ВыборкаДетальные.КоличествоОстаток, ОсталосьСписать);
		            Движение = Движения.ТоварыНаСкладах.ДобавитьРасход();
		            Движение.Период = Дата;
					ЗаполнитьЗначенияСвойств(Движение, ВыборкаДетальные, "Номенклатура, Склад, СрокГодности",);
		            Движение.Количество = Списываем;
		            Если Списываем = ВыборкаДетальные.КоличествоОстаток Тогда
		                Движение.Сумма = ВыборкаДетальные.СуммаОстаток;
		            Иначе
		                Движение.Сумма = Списываем / ВыборкаДетальные.КоличествоОстаток * ВыборкаДетальные.СуммаОстаток;
		            КонецЕсли;

		            ОсталосьСписать = ОсталосьСписать - Списываем; 
		            СтоимостьОбщая = СтоимостьОбщая + Движение.Сумма;  
				КонецЕсли;
				
				
				//Проводка по списанию товаров и материалов Дт90 Кт10/41
				Движение = Движения.Хозрасчетный.Добавить();
				Движение.СчетДт = ПланыСчетов.Хозрасчетный.Продажи;
				Движение.СчетКт = ВыборкаНоменклатура.СчетБухгалтерскогоУчета;
				БухгалтерскийУчет.ЗаполнитьСубконтоПоСчету(Движение.СчетКт, Движение.СубконтоКт, ВыборкаДетальные.Номенклатура);
				Движение.Период    = Дата;    
				Движение.Сумма = СтоимостьОбщая;
				Движение.Содержание    = "Списана себестоимость товарно-материальных ценностей";
			КонецЦикла;


	        Движение = Движения.УчетЗатрат.Добавить(); 
	        Движение.Период = Дата;
	        Движение.СтатьяЗатрат = ВыборкаНоменклатура.СтатьяЗатрат;
	        Движение.Сумма = СтоимостьОбщая;

	    КонецЕсли;

	    Движение = Движения.Продажи.Добавить(); 
	    Движение.Период = Дата;
	    Движение.Номенклатура = ВыборкаНоменклатура.Номенклатура;
	    Движение.Сотрудник = Сотрудник;
	    Движение.Клиент = Контрагент;
		Движение.Количество = ВыборкаНоменклатура.КоличествоВДокументе;
	    Движение.Сумма = ВыборкаНоменклатура.СуммаВДокументе;

	КонецЦикла;
		


	Если 	 ЗначениеЗаполнено(ДокументОснование) Тогда
		// регистр ЗаказыКлиентов Расход
		Движение = Движения.ЗаказыКлиентов.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.Клиент = Контрагент;
		Движение.ЗаказКлиента = Ссылка.ДокументОснование;
		Движение.Сумма = Услуги.Итог("Сумма"); 
	КонецЕсли;

	//Проводка по отражению выручки Дт62 Кт90
	Движение = Движения.Хозрасчетный.Добавить();
	Движение.СчетДт = ПланыСчетов.Хозрасчетный.РасчетыСПокупателями;
	Движение.СчетКт = ПланыСчетов.Хозрасчетный.Продажи;
	БухгалтерскийУчет.ЗаполнитьСубконтоПоСчету(Движение.СчетДт, Движение.СубконтоДт, Контрагент);
	Движение.Период = Дата;
	Движение.Сумма = СуммаДокумента;
	Движение.Содержание = "Отражена выручка от реализации товаров и услуг";		
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если НЕ ЗначениеЗаполнено(Ответственный) Тогда
		Ответственный = ПараметрыСеанса.ТекущийПользователь;
	КонецЕсли;
	СуммаДокумента = Услуги.Итог("Сумма") + Товары.Итог("Сумма")+ Абонементы.Итог("Сумма");   
	
	Если ЗначениеЗаполнено(Ссылка)
	И ПризнакОплаты <> Перечисления.ОплатаДокумента.ПолностьюОплачен Тогда
	    СтруктураОплаты = Документы.РеализацияТоваровИУслуг.ПроверитьОплатуДокумента(Ссылка);
	    ПризнакОплаты = СтруктураОплаты.ПризнакОплаты;
	КонецЕсли;
КонецПроцедуры

