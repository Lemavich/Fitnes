Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если НЕ ЗначениеЗаполнено(Ответственный) Тогда
		Ответственный = ПараметрыСеанса.ТекущийПользователь;
	КонецЕсли;  
	
	Если ЗначениеЗаполнено(Ссылка) И УслугаОказана = Ложь Тогда
		УслугаОказана = Документы.ПредварительнаяЗапись.ПроверитьОказаниеУслуг(Ссылка);
	КонецЕсли;
	                  
	//
	//ДлительностьУслуг = РассчитатьДатуОкончанияЗаписи();
	//Если ДлительностьУслуг = 0 Тогда // 1
	//    ДлительностьУслуг = 60;
	//КонецЕсли;
	//ДатаОкончанияЗаписи = ДатаЗаписи + ДлительностьУслуг*60; 	
	//
КонецПроцедуры 

Процедура ОбработкаПроведения(Отказ, Режим)
	//{{__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	// регистр ЗаказыКлиентов Приход
	Движения.ЗаказыКлиентов.Записывать = Истина;
	Движение = Движения.ЗаказыКлиентов.Добавить();
	Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
	Движение.Период = Дата;
	Движение.Клиент = Клиент;
	Движение.ЗаказКлиента = Ссылка; 
	Движение.Сумма = СуммаДокумента;

	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
КонецПроцедуры

Функция РассчитатьДатуОкончанияЗаписи()

	ТЧУслуги = Услуги.Выгрузить(,"Услуга"); //1

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТЧУслуги", ТЧУслуги); //2
	Запрос.Текст=
	"ВЫБРАТЬ
	|	ТЧУслуги.Услуга КАК Услуга
	|ПОМЕСТИТЬ ВТ_Услуга
	|ИЗ
	|	&ТЧУслуги КАК ТЧУслуги
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(Ном.ДлительностьУслуги) КАК ДлительностьУслуги
	|ИЗ
	|	ВТ_Услуга КАК ВТ_Услуга
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Ном
	|		ПО ВТ_Услуга.Услуга = Ном.Ссылка";

	Рез = Запрос.Выполнить();
	Если Рез.Пустой() Тогда
	    возврат 0;
	КонецЕсли;

	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	возврат Выборка.ДлительностьУслуги;

КонецФункции